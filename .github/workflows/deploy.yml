name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
      - 'apps/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/**'
      - 'apps/**'

env:
  TF_VERSION: '1.13.3'
  GCP_PROJECT: 'sigma-outcome'
  GCP_REGION: 'us-central1'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/gcp
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.GCP_PROJECT }}
    
    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Terraform Init
      run: terraform init
    
    - name: Drift Detection
      id: drift
      run: |
        echo "🔍 检测基础设施漂移..."
        set +e
        terraform plan -detailed-exitcode -var="nasa_api_key=${{ secrets.NASA_API_KEY }}" -out=plan.out
        exit_code=$?
        set -e
        
        if [ $exit_code -eq 0 ]; then
          echo "✅ 无变更需要"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        elif [ $exit_code -eq 2 ]; then
          echo "📋 检测到变更"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "❌ Terraform plan 失败"
          exit 1
        fi
    
    - name: Terraform Format
      run: terraform fmt -check
    
    - name: Show Plan (PR)
      if: github.event_name == 'pull_request' && steps.drift.outputs.has_changes == 'true'
      run: |
        echo "## Terraform Plan" >> $GITHUB_STEP_SUMMARY
        terraform show -no-color plan.out >> $GITHUB_STEP_SUMMARY
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.drift.outputs.has_changes == 'true'
      run: |
        echo "🚀 应用基础设施更改..."
        terraform apply -auto-approve plan.out
        echo "✅ 基础设施部署完成"
    
    - name: Skip Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.drift.outputs.has_changes == 'false'
      run: echo "⏭️ 跳过部署 - 无变更需要"
